import csv
import time

from DBUtils.PooledDB import PooledDB
import pymysql

cate_dir_elm = {
    '三明治': '意面披萨',
    '东北菜': '地方菜系',
    '中亚/中东菜': '东南亚菜',
    '中西糕点': '甜品饮品',
    '糕点': '甜品饮品',
    '串串香': '火锅串串',
    '云南菜': '地方菜系',
    '休闲零食': '超市便利',
    '零食': '超市便利',
    '便利店': '超市便利',
    '兰州拉面': '米粉面馆',
    '其他小吃': '特色小吃',
    '其他快餐': '快餐便当',
    '其他甜品饮品': '甜品饮品',
    '其他菜系': '地方菜系',
    '地方菜系': '地方菜系',
    '西餐': '西式料理',
    '其他西餐': '西式料理',
    '其他香锅火锅': '火锅串串',
    '小吃炸串': '火锅串串',
    '内蒙菜': '地方菜系',
    '冒菜': '麻辣烫冒菜',
    '冰淇淋': '甜品饮品',
    '冷冻速食': '超市便利',
    '凉皮': '米粉面馆',
    '米粉': '米粉面馆',
    '创意菜': '地方菜系',
    '刺身寿司': '日料寿司',
    '寿司': '日料寿司',
    '包子汤包': '包子粥店',
    '北京炸酱面': '米粉面馆',
    '北京菜': '地方菜系',
    '卤味鸭脖': '鸭脖卤味',
    '卤煮火烧': '特色小吃',
    '印度菜': '东南亚菜',
    '台湾菜': '地方菜系',
    '名酒坊': '超市便利',
    '咖啡': '甜品饮品',
    '咖喱饭': '快餐便当',
    '简餐': '快餐便当',
    '墨西哥菜': '东南亚菜',
    '大型超市': '超市便利',
    '奶站': '甜品饮品',
    '奶茶果汁': '甜品饮品',
    '宠物超市': '超市便利',
    '家居百货': '超市便利',
    '小火锅': '火锅串串',
    '小龙虾': '龙虾烧烤',
    '川渝火锅': '火锅串串',
    '川湘菜': '川湘菜',
    '干锅': '香锅干锅',
    '徽菜': '地方菜系',
    '意大利菜': '西式料理',
    '意面': '意面披萨',
    '成人用品': '超市便利',
    '披萨': '意面披萨',
    '排骨饭': '快餐便当',
    '新加坡菜': '东南亚菜',
    '新疆菜': '地方菜系',
    '闽南咸饭': '地方菜系',
    '日式简餐': '日料寿司',
    '日式烧烤': '日料寿司',
    '日本料理': '日料寿司',
    '木桶饭': '快餐便当',
    '本帮菜': '地方菜系',
    '果切': '甜品饮品',
    '水果店': '超市便利',
    '水果': '超市便利',
    '蔬菜豆品': '超市便利',
    '水果捞': '甜品饮品',
    '水站': '超市便利',
    '汉堡薯条': '汉堡薯条',
    '汉堡披萨': '汉堡薯条',
    '汉堡': '汉堡薯条',
    '江浙菜': '地方菜系',
    '江西菜': '地方菜系',
    '沙县小吃': '特色小吃',
    '老妈兔头': '特色小吃',
    '沙拉': '轻食沙拉',
    '沙茶面': '米粉面馆',
    '河北菜': '地方菜系',
    '河南菜': '地方菜系',
    '法国菜': '西式料理',
    '泡馍': '特色小吃',
    '泰国菜': '东南亚菜',
    '浏阳蒸菜': '地方菜系',
    '海鲜': '超市便利',
    '美妆母婴': '超市便利',
    '海鲜水产': '超市便利',
    '淮扬菜': '地方菜系',
    '清真菜': '地方菜系',
    '港式火锅': '火锅串串',
    '火锅烤鱼': '火锅串串',
    '湖北菜': '地方菜系',
    '滋补炖汤': '暖胃粉丝汤',
    '火锅烤串食材': '火锅串串',
    '炒饭': '快餐便当',
    '炸鸡炸串': '炸鸡炸串',
    '烤冷面': '特色小吃',
    '烤肉拌饭': '快餐便当',
    '烤鱼': '龙虾烧烤',
    '烤鸭熟食': '鸭脖卤味',
    '熟食': '鸭脖卤味',
    '鸭脖': '鸭脖卤味',
    '烧烤': '龙虾烧烤',
    '烧腊饭': '快餐便当',
    '烧饼': '夹馍饼类',
    '热干面': '米粉面馆',
    '焖锅': '香锅干锅',
    '香锅冒菜': '香锅干锅',
    '焗饭': '快餐便当',
    '煎饼': '夹馍饼类',
    '煲仔饭': '快餐便当',
    '简餐便当': '快餐便当',
    '牛排': '西式料理',
    '牛肉汤': '暖胃粉丝汤',
    '牛肉火锅': '火锅串串',
    '牛肉饭': '快餐便当',
    '瓦罐汤': '暖胃粉丝汤',
    '甏肉干饭': '快餐便当',
    '甘肃菜': '地方菜系',
    '甜品': '甜品饮品',
    '面包蛋糕': '甜品饮品',
    '生煎': '包子粥店',
    '包子': '包子粥店',
    '盖浇饭': '快餐便当',
    '砂锅': '暖胃粉丝汤',
    '五金日用': '超市便利',
    '社区生鲜店': '超市便利',
    '私房菜': '地方菜系',
    '章鱼小丸子': '特色小吃',
    '炸鸡小吃': '特色小吃',
    '米粉米线': '米粉面馆',
    '粉丝汤': '暖胃粉丝汤',
    '粤菜': '地方菜系',
    '闽菜': '地方菜系',
    '粥店': '包子粥店',
    '粮油副食': '超市便利',
    '糖葫芦': '特色小吃',
    '素食': '轻食沙拉',
    '绿植': '超市便利',
    '羊杂割': '暖胃粉丝汤',
    '羊肉汤': '暖胃粉丝汤',
    '羊蝎子': '火锅串串',
    '美妆个护': '超市便利',
    '肉夹馍': '夹馍饼类',
    '肉禽蛋品': '超市便利',
    '肠粉': '米粉面馆',
    '胡辣汤': '暖胃粉丝汤',
    '脆皮鸡饭': '快餐便当',
    '花甲': '特色小吃',
    '茶行': '超市便利',
    '茶餐厅': '地方菜系',
    '药店': '超市便利',
    '葱油饼': '夹馍饼类',
    '蒸鸡滋补鸡': '特色小吃',
    '蛋糕': '甜品饮品',
    '螺蛳粉': '米粉面馆',
    '西北菜': '地方菜系',
    '西班牙菜': '西式料理',
    '油条': '包子粥店',
    '豆浆油条': '包子粥店',
    '贵州菜': '地方菜系',
    '越南菜': '东南亚菜',
    '酸辣粉': '米粉面馆',
    '重庆小面': '米粉面馆',
    '钵钵鸡': '特色小吃',
    '铜锅涮肉': '火锅串串',
    '锅巴菜': '地方菜系',
    '锅贴': '包子粥店',
    '陕西菜': '地方菜系',
    '面包': '甜品饮品',
    '面馆': '米粉面馆',
    '韩国料理': '韩式料理',
    '韩国炸鸡': '韩式料理',
    '韩式烤肉': '韩式料理',
    '韩式简餐': '韩式料理',
    '饮料冰品': '甜品饮品',
    '饺子': '饺子馄饨',
    '馄饨抄手': '饺子馄饨',
    '马来西亚菜': '东南亚菜',
    '驴肉火烧': '夹馍饼类',
    '鱼火锅': '火锅串串',
    '火锅': '火锅串串',
    '鲁菜': '地方菜系',
    '海南菜': '地方菜系',
    '苏帮菜': '地方菜系',
    '金陵菜': '地方菜系',
    '鲜花': '超市便利',
    '鸡公煲': '特色小吃',
    '糁汤': '特色小吃',
    '鸡架': '特色小吃',
    '麻辣烫': '麻辣烫冒菜',
    '麻辣香锅': '香锅干锅',
    '香锅': '香锅干锅',
    '黄焖鸡米饭': '快餐便当',
    '': '超市便利',
    '未知品类': '超市便利',
    '盐帮菜': '地方菜系'

}

cate_dir_mt = {'三明治': '意面披萨',
               '东北菜': '地方菜系',
               '中亚/中东菜': '东南亚菜',
               '中式烤肉': '龙虾烧烤',
               '中式简餐': '快餐便当',
               '中西糕点': '甜品饮品',
               '串串香': '火锅串串',
               '云南菜': '地方菜系',
               '俄罗斯菜': '东南亚菜',
               '冒菜': '麻辣烫冒菜',
               '农家菜': '地方菜系',
               '冰淇淋': '甜品饮品',
               '冻酸奶炒酸奶': '甜品饮品',
               '凉皮': '米粉面馆',
               '创意菜': '地方菜系',
               '到店自取': '意面披萨',
               '刺身寿司': '日料寿司',
               '北京菜': '地方菜系',
               '卤味熟食': '鸭脖卤味',
               '卤煮炒肝': '鸭脖卤味',
               '印度菜': '东南亚菜',
               '台湾菜': '地方菜系',
               '咖啡': '甜品饮品',
               '家常菜': '地方菜系',
               '小吃馆': '特色小吃',
               '小火锅': '火锅串串',
               '小龙虾': '龙虾烧烤',
               '川渝火锅': '火锅串串',
               '干锅': '香锅干锅',
               '徽菜': '地方菜系',
               '快食简餐': '快餐便当',
               '意大利菜': '西式料理',
               '拉美烤肉': '东南亚菜',
               '排骨饭': '快餐便当',
               '新加坡菜': '东南亚菜',
               '新疆菜': '地方菜系',
               '日式拉面': '日料寿司',
               '日韩料理': '日料寿司',
               '木桶饭': '快餐便当',
               '本帮江浙菜': '地方菜系',
               '汉堡披萨': '汉堡薯条',
               '江西菜': '地方菜系',
               '汤类': '暖胃粉丝汤',
               '沙县小吃': '特色小吃',
               '沙拉': '轻食沙拉',
               '法国菜': '西式料理',
               '泰国菜': '东南亚菜',
               '海鲜': '其他品类',
               '港式火锅': '火锅串串',
               '湖北菜': '地方菜系',
               '火锅': '火锅串串',
               '烤串': '龙虾烧烤',
               '烤肉拌饭': '快餐便当',
               '烤鱼': '火锅串串',
               '热干面': '米粉面馆',
               '焖锅': '香锅干锅',
               '煎饼果子': '夹馍饼类',
               '牛排': '西式料理',
               '甜品': '甜品饮品',
               '甜点饮品': '甜品饮品',
               '生日蛋糕': '甜品饮品',
               '生煎': '包子粥店',
               '盖浇饭': '快餐便当',
               '砂锅': '米粉面馆',
               '私房菜': '地方菜系',
               '米粉米线': '米粉面馆',
               '粉丝汤': '暖胃粉丝汤',
               '粤菜': '地方菜系',
               '素食': '轻食沙拉',
               '羊蝎子': '火锅串串',
               '美团专送': '快餐便当',
               '美食': '川湘菜',
               '肉夹馍': '夹馍饼类',
               '肠粉': '米粉面馆',
               '茶餐厅': '地方菜系',
               '西式快餐': '西式料理',
               '西班牙菜': '东南亚菜',
               '豆浆油条': '包子粥店',
               '贵州菜': '地方菜系',
               '超市便利': '超市便利',
               '越南菜': '东南亚菜',
               '铁板烧': '特色小吃',
               '铜锅涮肉': '火锅串串',
               '锅贴': '包子粥店',
               '闽菜': '地方菜系',
               '面包/小蛋糕': '甜品饮品',
               '面馆': '米粉面馆',
               '韩国炸鸡': '韩式料理',
               '韩式烤肉': '韩式料理',
               '饺子': '饺子馄饨',
               '饼类': '夹馍饼类',
               '馄饨抄手': '饺子馄饨',
               '马来菜': '东南亚菜',
               '驴肉火烧': '特色小吃',
               '鱼火锅': '火锅串串',
               '鲁菜': '地方菜系',
               '鸡公煲': '特色小吃',
               '麻辣香锅': '香锅干锅',
               '黄焖鸡': '快餐便当',
               '': '其他品类'

               }

"""
匹配店名
"""


def matching_shop_name(results):
    return_list = []
    filename = "G:\\数据\\品类等需求\\品类区分\\shop_cate.csv"
    for row_shop in results:
        shop_cate = '未匹配'
        with open(filename, 'r', encoding="utf-8") as file:
            reader = csv.DictReader(file)
            for row in reader:

                target_cate = row["目标品类"]
                target_key_word = row["店名关键字"]
                key_word_list = str(target_key_word).split('|')
                for key_word in key_word_list:
                    if key_word in row_shop[1]:
                        shop_cate = target_cate
        return_list.append([row_shop[0], row_shop[1], row_shop[2], row_shop[3], shop_cate])

    return return_list


"""
匹配菜品
"""


def matching_food_name():
    pass


"""
匹配平台品类
"""


def matching_cate_name(shop_name_matched, platform):
    # city = ['beijing', 'shanghai', 'hangzhou', 'wuhan']
    # platform = 'elm'
    # for i in city:

    return_list = []
    if platform == 'elm':
        for row in shop_name_matched:
            shop_cate = row[4]
            if shop_cate == "未匹配":

                cate_name = row[3]
                id = row[0]
                splited = str(cate_name).split(',')

                dict = {}
                for key in splited:
                    dict[key] = dict.get(key, 0) + 1
                for key1, value in dict.items():
                    if (value == max(dict.values())):
                        res = cate_dir_elm.get(key1, "其他品类")
                        shop_cate = res
            return_list.append([row[0], row[1], row[2], row[3], shop_cate])
    else:
        for row in shop_name_matched:
            shop_cate = row[4]
            if shop_cate == "未匹配":

                cate_name = row[2]
                id = row[0]
                splited = str(cate_name).split(',')

                dict = {}
                for key in splited:
                    dict[key] = dict.get(key, 0) + 1
                for key1, value in dict.items():
                    if (value == max(dict.values())):
                        res = cate_dir_mt.get(key1, "其他品类")
                        shop_cate = res
            return_list.append([row[0], row[1], row[2], row[3], shop_cate])
    return return_list


if __name__ == '__main__':
    pool = PooledDB(pymysql, 5, host='bj-cdb-cwu7v42u.sql.tencentcdb.com', user='root', passwd='xmxc1234',
                    db='mapmarkeronline',
                    port=62864)
    db = pool.connection()
    cur = db.cursor()
    platform_list = ['elm', 'mt']
    city_list = ['beijing', 'shanghai', 'hangzhou']
    update_count = [13]
    for platform in platform_list:
        for city in city_list:
            for update in update_count:
                if platform == 'elm':
                    update = update + 2
                    sql = "SELECT  id,client_name,first_cate,second_cate from t_map_client_%s_%s_mark WHERE update_count = %s" % (
                        platform, city, update)
                else:
                    sql = "SELECT  id,client_name,first_cate_name,second_cate_name from t_map_client_%s_%s_mark WHERE update_count = %s" % (
                        platform, city, update)
                cur.execute(sql)
                results = cur.fetchall()
                shop_name_matched = matching_shop_name(results)
                cate_name_matched = matching_cate_name(shop_name_matched, platform)

                for row in cate_name_matched:
                    update_sql = "UPDATE t_map_client_%s_%s_mark set own_set_cate ='%s' where update_count=%s and id= %s;" % (
                        platform, city, row[4], update, row[0])
                    # sql_list.append((row[4], update, row[0]))
                    print(update_sql)
                    cur.execute(update_sql)
                print("更新成功")
                # 提交到数据库执行
                db.commit()

    db.close()

    # with open('shop_cate4.csv', 'w', newline='',
    #           encoding='utf-8') as csvfile:
    #     writer = csv.writer(csvfile)
    #     writer.writerow(['店名id', '店名', '平台一级品类', '平台二级品类', '自建品类'])
    #     for row in cate_name_matched:
    #         writer.writerow(row)
